#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBenXe")]
	public partial class QLBXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChuyen(Chuyen instance);
    partial void UpdateChuyen(Chuyen instance);
    partial void DeleteChuyen(Chuyen instance);
    partial void InsertCTDichVu(CTDichVu instance);
    partial void UpdateCTDichVu(CTDichVu instance);
    partial void DeleteCTDichVu(CTDichVu instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertGhe(Ghe instance);
    partial void UpdateGhe(Ghe instance);
    partial void DeleteGhe(Ghe instance);
    partial void InsertHangXe(HangXe instance);
    partial void UpdateHangXe(HangXe instance);
    partial void DeleteHangXe(HangXe instance);
    partial void InsertKhach(Khach instance);
    partial void UpdateKhach(Khach instance);
    partial void DeleteKhach(Khach instance);
    partial void InsertLoaiXe(LoaiXe instance);
    partial void UpdateLoaiXe(LoaiXe instance);
    partial void DeleteLoaiXe(LoaiXe instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertTinhThanh(TinhThanh instance);
    partial void UpdateTinhThanh(TinhThanh instance);
    partial void DeleteTinhThanh(TinhThanh instance);
    partial void InsertTram(Tram instance);
    partial void UpdateTram(Tram instance);
    partial void DeleteTram(Tram instance);
    partial void InsertVe(Ve instance);
    partial void UpdateVe(Ve instance);
    partial void DeleteVe(Ve instance);
    partial void InsertXe(Xe instance);
    partial void UpdateXe(Xe instance);
    partial void DeleteXe(Xe instance);
    #endregion
		
		public QLBXDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLBenXeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLBXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Chuyen> Chuyens
		{
			get
			{
				return this.GetTable<Chuyen>();
			}
		}
		
		public System.Data.Linq.Table<CTDichVu> CTDichVus
		{
			get
			{
				return this.GetTable<CTDichVu>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<Ghe> Ghes
		{
			get
			{
				return this.GetTable<Ghe>();
			}
		}
		
		public System.Data.Linq.Table<HangXe> HangXes
		{
			get
			{
				return this.GetTable<HangXe>();
			}
		}
		
		public System.Data.Linq.Table<Khach> Khaches
		{
			get
			{
				return this.GetTable<Khach>();
			}
		}
		
		public System.Data.Linq.Table<LoaiXe> LoaiXes
		{
			get
			{
				return this.GetTable<LoaiXe>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<TinhThanh> TinhThanhs
		{
			get
			{
				return this.GetTable<TinhThanh>();
			}
		}
		
		public System.Data.Linq.Table<Tram> Trams
		{
			get
			{
				return this.GetTable<Tram>();
			}
		}
		
		public System.Data.Linq.Table<Ve> Ves
		{
			get
			{
				return this.GetTable<Ve>();
			}
		}
		
		public System.Data.Linq.Table<Xe> Xes
		{
			get
			{
				return this.GetTable<Xe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chuyen")]
	public partial class Chuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChuyen;
		
		private string _TenChuyen;
		
		private string _DiemBatDau;
		
		private string _DiemDen;
		
		private System.Nullable<System.TimeSpan> _TGChuyen;
		
		private EntitySet<Tram> _Trams;
		
		private EntitySet<Xe> _Xes;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
		private EntityRef<TinhThanh> _TinhThanh1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChuyenChanging(string value);
    partial void OnMaChuyenChanged();
    partial void OnTenChuyenChanging(string value);
    partial void OnTenChuyenChanged();
    partial void OnDiemBatDauChanging(string value);
    partial void OnDiemBatDauChanged();
    partial void OnDiemDenChanging(string value);
    partial void OnDiemDenChanged();
    partial void OnTGChuyenChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTGChuyenChanged();
    #endregion
		
		public Chuyen()
		{
			this._Trams = new EntitySet<Tram>(new Action<Tram>(this.attach_Trams), new Action<Tram>(this.detach_Trams));
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			this._TinhThanh = default(EntityRef<TinhThanh>);
			this._TinhThanh1 = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuyen", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChuyen
		{
			get
			{
				return this._MaChuyen;
			}
			set
			{
				if ((this._MaChuyen != value))
				{
					this.OnMaChuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChuyen = value;
					this.SendPropertyChanged("MaChuyen");
					this.OnMaChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuyen", DbType="NVarChar(50)")]
		public string TenChuyen
		{
			get
			{
				return this._TenChuyen;
			}
			set
			{
				if ((this._TenChuyen != value))
				{
					this.OnTenChuyenChanging(value);
					this.SendPropertyChanging();
					this._TenChuyen = value;
					this.SendPropertyChanged("TenChuyen");
					this.OnTenChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemBatDau", DbType="Char(5)")]
		public string DiemBatDau
		{
			get
			{
				return this._DiemBatDau;
			}
			set
			{
				if ((this._DiemBatDau != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiemBatDauChanging(value);
					this.SendPropertyChanging();
					this._DiemBatDau = value;
					this.SendPropertyChanged("DiemBatDau");
					this.OnDiemBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDen", DbType="Char(5)")]
		public string DiemDen
		{
			get
			{
				return this._DiemDen;
			}
			set
			{
				if ((this._DiemDen != value))
				{
					if (this._TinhThanh1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiemDenChanging(value);
					this.SendPropertyChanging();
					this._DiemDen = value;
					this.SendPropertyChanged("DiemDen");
					this.OnDiemDenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGChuyen", DbType="Time")]
		public System.Nullable<System.TimeSpan> TGChuyen
		{
			get
			{
				return this._TGChuyen;
			}
			set
			{
				if ((this._TGChuyen != value))
				{
					this.OnTGChuyenChanging(value);
					this.SendPropertyChanging();
					this._TGChuyen = value;
					this.SendPropertyChanged("TGChuyen");
					this.OnTGChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuyen_Tram", Storage="_Trams", ThisKey="MaChuyen", OtherKey="Chuyen")]
		public EntitySet<Tram> Trams
		{
			get
			{
				return this._Trams;
			}
			set
			{
				this._Trams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuyen_Xe", Storage="_Xes", ThisKey="MaChuyen", OtherKey="MaChuyen")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_Chuyen", Storage="_TinhThanh", ThisKey="DiemBatDau", OtherKey="MaTinh", IsForeignKey=true)]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.Chuyens.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.Chuyens.Add(this);
						this._DiemBatDau = value.MaTinh;
					}
					else
					{
						this._DiemBatDau = default(string);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_Chuyen1", Storage="_TinhThanh1", ThisKey="DiemDen", OtherKey="MaTinh", IsForeignKey=true)]
		public TinhThanh TinhThanh1
		{
			get
			{
				return this._TinhThanh1.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh1.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh1.Entity = null;
						previousValue.Chuyens1.Remove(this);
					}
					this._TinhThanh1.Entity = value;
					if ((value != null))
					{
						value.Chuyens1.Add(this);
						this._DiemDen = value.MaTinh;
					}
					else
					{
						this._DiemDen = default(string);
					}
					this.SendPropertyChanged("TinhThanh1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trams(Tram entity)
		{
			this.SendPropertyChanging();
			entity.Chuyen1 = this;
		}
		
		private void detach_Trams(Tram entity)
		{
			this.SendPropertyChanging();
			entity.Chuyen1 = null;
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.Chuyen = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.Chuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDichVu")]
	public partial class CTDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDV;
		
		private string _Xe;
		
		private EntityRef<DichVu> _DichVu;
		
		private EntityRef<Xe> _Xe1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(string value);
    partial void OnMaDVChanged();
    partial void OnXeChanging(string value);
    partial void OnXeChanged();
    #endregion
		
		public CTDichVu()
		{
			this._DichVu = default(EntityRef<DichVu>);
			this._Xe1 = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Xe
		{
			get
			{
				return this._Xe;
			}
			set
			{
				if ((this._Xe != value))
				{
					if (this._Xe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXeChanging(value);
					this.SendPropertyChanging();
					this._Xe = value;
					this.SendPropertyChanged("Xe");
					this.OnXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_CTDichVu", Storage="_DichVu", ThisKey="MaDV", OtherKey="MaDV", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.CTDichVus.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.CTDichVus.Add(this);
						this._MaDV = value.MaDV;
					}
					else
					{
						this._MaDV = default(string);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_CTDichVu", Storage="_Xe1", ThisKey="Xe", OtherKey="MaXe", IsForeignKey=true)]
		public Xe Xe1
		{
			get
			{
				return this._Xe1.Entity;
			}
			set
			{
				Xe previousValue = this._Xe1.Entity;
				if (((previousValue != value) 
							|| (this._Xe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe1.Entity = null;
						previousValue.CTDichVus.Remove(this);
					}
					this._Xe1.Entity = value;
					if ((value != null))
					{
						value.CTDichVus.Add(this);
						this._Xe = value.MaXe;
					}
					else
					{
						this._Xe = default(string);
					}
					this.SendPropertyChanged("Xe1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDV;
		
		private string _TenDV;
		
		private EntitySet<CTDichVu> _CTDichVus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(string value);
    partial void OnMaDVChanged();
    partial void OnTenDVChanging(string value);
    partial void OnTenDVChanged();
    #endregion
		
		public DichVu()
		{
			this._CTDichVus = new EntitySet<CTDichVu>(new Action<CTDichVu>(this.attach_CTDichVus), new Action<CTDichVu>(this.detach_CTDichVus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDV", DbType="NVarChar(20)")]
		public string TenDV
		{
			get
			{
				return this._TenDV;
			}
			set
			{
				if ((this._TenDV != value))
				{
					this.OnTenDVChanging(value);
					this.SendPropertyChanging();
					this._TenDV = value;
					this.SendPropertyChanged("TenDV");
					this.OnTenDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_CTDichVu", Storage="_CTDichVus", ThisKey="MaDV", OtherKey="MaDV")]
		public EntitySet<CTDichVu> CTDichVus
		{
			get
			{
				return this._CTDichVus;
			}
			set
			{
				this._CTDichVus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDichVus(CTDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_CTDichVus(CTDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ghe")]
	public partial class Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoGhe;
		
		private string _TrangThai;
		
		private string _Xe;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<Xe> _Xe1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoGheChanging(string value);
    partial void OnSoGheChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnXeChanging(string value);
    partial void OnXeChanged();
    #endregion
		
		public Ghe()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._Xe1 = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGhe", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoGhe
		{
			get
			{
				return this._SoGhe;
			}
			set
			{
				if ((this._SoGhe != value))
				{
					this.OnSoGheChanging(value);
					this.SendPropertyChanging();
					this._SoGhe = value;
					this.SendPropertyChanged("SoGhe");
					this.OnSoGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Xe
		{
			get
			{
				return this._Xe;
			}
			set
			{
				if ((this._Xe != value))
				{
					if (this._Xe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXeChanging(value);
					this.SendPropertyChanging();
					this._Xe = value;
					this.SendPropertyChanged("Xe");
					this.OnXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_Ve", Storage="_Ves", ThisKey="SoGhe,Xe", OtherKey="SoGhe,Xe")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_Ghe", Storage="_Xe1", ThisKey="Xe", OtherKey="MaXe", IsForeignKey=true)]
		public Xe Xe1
		{
			get
			{
				return this._Xe1.Entity;
			}
			set
			{
				Xe previousValue = this._Xe1.Entity;
				if (((previousValue != value) 
							|| (this._Xe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe1.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._Xe1.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._Xe = value.MaXe;
					}
					else
					{
						this._Xe = default(string);
					}
					this.SendPropertyChanged("Xe1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangXe")]
	public partial class HangXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHangXe;
		
		private string _TenHangXe;
		
		private EntitySet<Xe> _Xes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangXeChanging(string value);
    partial void OnMaHangXeChanged();
    partial void OnTenHangXeChanging(string value);
    partial void OnTenHangXeChanged();
    #endregion
		
		public HangXe()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHangXe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHangXe
		{
			get
			{
				return this._MaHangXe;
			}
			set
			{
				if ((this._MaHangXe != value))
				{
					this.OnMaHangXeChanging(value);
					this.SendPropertyChanging();
					this._MaHangXe = value;
					this.SendPropertyChanged("MaHangXe");
					this.OnMaHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHangXe", DbType="NVarChar(20)")]
		public string TenHangXe
		{
			get
			{
				return this._TenHangXe;
			}
			set
			{
				if ((this._TenHangXe != value))
				{
					this.OnTenHangXeChanging(value);
					this.SendPropertyChanging();
					this._TenHangXe = value;
					this.SendPropertyChanged("TenHangXe");
					this.OnTenHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_Xe", Storage="_Xes", ThisKey="MaHangXe", OtherKey="MaHangXe")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khach")]
	public partial class Khach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhach;
		
		private string _CCCD;
		
		private string _TenKhachHang;
		
		private System.Nullable<int> _Tuoi;
		
		private string _SDT;
		
		private string _TaiKhoan;
		
		private string _MK;
		
		private EntitySet<Ve> _Ves;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachChanging(string value);
    partial void OnMaKhachChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnTuoiChanging(System.Nullable<int> value);
    partial void OnTuoiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    #endregion
		
		public Khach()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="Char(12)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(50)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Int")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(10)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="VarChar(10)")]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_Ve", Storage="_Ves", ThisKey="MaKhach", OtherKey="MaKhach")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Khach = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Khach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiXe")]
	public partial class LoaiXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiXe;
		
		private string _TenLoaiXe;
		
		private System.Nullable<int> _SoGhe;
		
		private EntitySet<Xe> _Xes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiXeChanging(string value);
    partial void OnMaLoaiXeChanged();
    partial void OnTenLoaiXeChanging(string value);
    partial void OnTenLoaiXeChanged();
    partial void OnSoGheChanging(System.Nullable<int> value);
    partial void OnSoGheChanged();
    #endregion
		
		public LoaiXe()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiXe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiXe
		{
			get
			{
				return this._MaLoaiXe;
			}
			set
			{
				if ((this._MaLoaiXe != value))
				{
					this.OnMaLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiXe = value;
					this.SendPropertyChanged("MaLoaiXe");
					this.OnMaLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiXe", DbType="NVarChar(30)")]
		public string TenLoaiXe
		{
			get
			{
				return this._TenLoaiXe;
			}
			set
			{
				if ((this._TenLoaiXe != value))
				{
					this.OnTenLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiXe = value;
					this.SendPropertyChanged("TenLoaiXe");
					this.OnTenLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGhe", DbType="Int")]
		public System.Nullable<int> SoGhe
		{
			get
			{
				return this._SoGhe;
			}
			set
			{
				if ((this._SoGhe != value))
				{
					this.OnSoGheChanging(value);
					this.SendPropertyChanging();
					this._SoGhe = value;
					this.SendPropertyChanged("SoGhe");
					this.OnSoGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiXe_Xe", Storage="_Xes", ThisKey="MaLoaiXe", OtherKey="LoaiXe")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiXe1 = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiXe1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhanVien;
		
		private string _TenNhanVien;
		
		private string _MatKhau;
		
		private string _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public NhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(50)")]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="VarChar(12)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhThanh")]
	public partial class TinhThanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTinh;
		
		private string _TenTinh;
		
		private EntitySet<Chuyen> _Chuyens;
		
		private EntitySet<Chuyen> _Chuyens1;
		
		private EntitySet<Tram> _Trams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhChanging(string value);
    partial void OnMaTinhChanged();
    partial void OnTenTinhChanging(string value);
    partial void OnTenTinhChanged();
    #endregion
		
		public TinhThanh()
		{
			this._Chuyens = new EntitySet<Chuyen>(new Action<Chuyen>(this.attach_Chuyens), new Action<Chuyen>(this.detach_Chuyens));
			this._Chuyens1 = new EntitySet<Chuyen>(new Action<Chuyen>(this.attach_Chuyens1), new Action<Chuyen>(this.detach_Chuyens1));
			this._Trams = new EntitySet<Tram>(new Action<Tram>(this.attach_Trams), new Action<Tram>(this.detach_Trams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinh", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTinh
		{
			get
			{
				return this._MaTinh;
			}
			set
			{
				if ((this._MaTinh != value))
				{
					this.OnMaTinhChanging(value);
					this.SendPropertyChanging();
					this._MaTinh = value;
					this.SendPropertyChanged("MaTinh");
					this.OnMaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinh", DbType="NVarChar(50)")]
		public string TenTinh
		{
			get
			{
				return this._TenTinh;
			}
			set
			{
				if ((this._TenTinh != value))
				{
					this.OnTenTinhChanging(value);
					this.SendPropertyChanging();
					this._TenTinh = value;
					this.SendPropertyChanged("TenTinh");
					this.OnTenTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_Chuyen", Storage="_Chuyens", ThisKey="MaTinh", OtherKey="DiemBatDau")]
		public EntitySet<Chuyen> Chuyens
		{
			get
			{
				return this._Chuyens;
			}
			set
			{
				this._Chuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_Chuyen1", Storage="_Chuyens1", ThisKey="MaTinh", OtherKey="DiemDen")]
		public EntitySet<Chuyen> Chuyens1
		{
			get
			{
				return this._Chuyens1;
			}
			set
			{
				this._Chuyens1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_Tram", Storage="_Trams", ThisKey="MaTinh", OtherKey="MaTinh")]
		public EntitySet<Tram> Trams
		{
			get
			{
				return this._Trams;
			}
			set
			{
				this._Trams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chuyens(Chuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_Chuyens(Chuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
		
		private void attach_Chuyens1(Chuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh1 = this;
		}
		
		private void detach_Chuyens1(Chuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh1 = null;
		}
		
		private void attach_Trams(Tram entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_Trams(Tram entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tram")]
	public partial class Tram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTram;
		
		private string _Chuyen;
		
		private string _TenTram;
		
		private string _MaTinh;
		
		private EntityRef<Chuyen> _Chuyen1;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTramChanging(string value);
    partial void OnMaTramChanged();
    partial void OnChuyenChanging(string value);
    partial void OnChuyenChanged();
    partial void OnTenTramChanging(string value);
    partial void OnTenTramChanged();
    partial void OnMaTinhChanging(string value);
    partial void OnMaTinhChanged();
    #endregion
		
		public Tram()
		{
			this._Chuyen1 = default(EntityRef<Chuyen>);
			this._TinhThanh = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTram", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTram
		{
			get
			{
				return this._MaTram;
			}
			set
			{
				if ((this._MaTram != value))
				{
					this.OnMaTramChanging(value);
					this.SendPropertyChanging();
					this._MaTram = value;
					this.SendPropertyChanged("MaTram");
					this.OnMaTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chuyen", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Chuyen
		{
			get
			{
				return this._Chuyen;
			}
			set
			{
				if ((this._Chuyen != value))
				{
					if (this._Chuyen1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChuyenChanging(value);
					this.SendPropertyChanging();
					this._Chuyen = value;
					this.SendPropertyChanged("Chuyen");
					this.OnChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTram", DbType="NVarChar(50)")]
		public string TenTram
		{
			get
			{
				return this._TenTram;
			}
			set
			{
				if ((this._TenTram != value))
				{
					this.OnTenTramChanging(value);
					this.SendPropertyChanging();
					this._TenTram = value;
					this.SendPropertyChanged("TenTram");
					this.OnTenTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinh", DbType="Char(5)")]
		public string MaTinh
		{
			get
			{
				return this._MaTinh;
			}
			set
			{
				if ((this._MaTinh != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhChanging(value);
					this.SendPropertyChanging();
					this._MaTinh = value;
					this.SendPropertyChanged("MaTinh");
					this.OnMaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuyen_Tram", Storage="_Chuyen1", ThisKey="Chuyen", OtherKey="MaChuyen", IsForeignKey=true)]
		public Chuyen Chuyen1
		{
			get
			{
				return this._Chuyen1.Entity;
			}
			set
			{
				Chuyen previousValue = this._Chuyen1.Entity;
				if (((previousValue != value) 
							|| (this._Chuyen1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chuyen1.Entity = null;
						previousValue.Trams.Remove(this);
					}
					this._Chuyen1.Entity = value;
					if ((value != null))
					{
						value.Trams.Add(this);
						this._Chuyen = value.MaChuyen;
					}
					else
					{
						this._Chuyen = default(string);
					}
					this.SendPropertyChanged("Chuyen1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_Tram", Storage="_TinhThanh", ThisKey="MaTinh", OtherKey="MaTinh", IsForeignKey=true)]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.Trams.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.Trams.Add(this);
						this._MaTinh = value.MaTinh;
					}
					else
					{
						this._MaTinh = default(string);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve")]
	public partial class Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVe;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private string _TrangThai;
		
		private string _MaKhach;
		
		private string _SoGhe;
		
		private string _Xe;
		
		private EntityRef<Ghe> _Ghe;
		
		private EntityRef<Khach> _Khach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVeChanging(string value);
    partial void OnMaVeChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnMaKhachChanging(string value);
    partial void OnMaKhachChanged();
    partial void OnSoGheChanging(string value);
    partial void OnSoGheChanged();
    partial void OnXeChanging(string value);
    partial void OnXeChanged();
    #endregion
		
		public Ve()
		{
			this._Ghe = default(EntityRef<Ghe>);
			this._Khach = default(EntityRef<Khach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVe
		{
			get
			{
				return this._MaVe;
			}
			set
			{
				if ((this._MaVe != value))
				{
					this.OnMaVeChanging(value);
					this.SendPropertyChanging();
					this._MaVe = value;
					this.SendPropertyChanged("MaVe");
					this.OnMaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="Char(5)")]
		public string MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					if (this._Khach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGhe", DbType="Char(2)")]
		public string SoGhe
		{
			get
			{
				return this._SoGhe;
			}
			set
			{
				if ((this._SoGhe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoGheChanging(value);
					this.SendPropertyChanging();
					this._SoGhe = value;
					this.SendPropertyChanged("SoGhe");
					this.OnSoGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xe", DbType="Char(5)")]
		public string Xe
		{
			get
			{
				return this._Xe;
			}
			set
			{
				if ((this._Xe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXeChanging(value);
					this.SendPropertyChanging();
					this._Xe = value;
					this.SendPropertyChanged("Xe");
					this.OnXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_Ve", Storage="_Ghe", ThisKey="SoGhe,Xe", OtherKey="SoGhe,Xe", IsForeignKey=true)]
		public Ghe Ghe
		{
			get
			{
				return this._Ghe.Entity;
			}
			set
			{
				Ghe previousValue = this._Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ghe.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._Ghe.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._SoGhe = value.SoGhe;
						this._Xe = value.Xe;
					}
					else
					{
						this._SoGhe = default(string);
						this._Xe = default(string);
					}
					this.SendPropertyChanged("Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_Ve", Storage="_Khach", ThisKey="MaKhach", OtherKey="MaKhach", IsForeignKey=true)]
		public Khach Khach
		{
			get
			{
				return this._Khach.Entity;
			}
			set
			{
				Khach previousValue = this._Khach.Entity;
				if (((previousValue != value) 
							|| (this._Khach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khach.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._Khach.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._MaKhach = value.MaKhach;
					}
					else
					{
						this._MaKhach = default(string);
					}
					this.SendPropertyChanged("Khach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xe")]
	public partial class Xe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaXe;
		
		private string _SoXe;
		
		private string _MaChuyen;
		
		private string _TenTaiXe;
		
		private string _LoaiXe;
		
		private string _TrangThai;
		
		private string _MaHangXe;
		
		private System.Nullable<System.DateTime> _TGXuatPhat;
		
		private System.Nullable<System.TimeSpan> _TGHuyVe;
		
		private System.Nullable<int> _Gia;
		
		private EntitySet<CTDichVu> _CTDichVus;
		
		private EntitySet<Ghe> _Ghes;
		
		private EntityRef<LoaiXe> _LoaiXe1;
		
		private EntityRef<Chuyen> _Chuyen;
		
		private EntityRef<HangXe> _HangXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaXeChanging(string value);
    partial void OnMaXeChanged();
    partial void OnSoXeChanging(string value);
    partial void OnSoXeChanged();
    partial void OnMaChuyenChanging(string value);
    partial void OnMaChuyenChanged();
    partial void OnTenTaiXeChanging(string value);
    partial void OnTenTaiXeChanged();
    partial void OnLoaiXeChanging(string value);
    partial void OnLoaiXeChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnMaHangXeChanging(string value);
    partial void OnMaHangXeChanged();
    partial void OnTGXuatPhatChanging(System.Nullable<System.DateTime> value);
    partial void OnTGXuatPhatChanged();
    partial void OnTGHuyVeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTGHuyVeChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    #endregion
		
		public Xe()
		{
			this._CTDichVus = new EntitySet<CTDichVu>(new Action<CTDichVu>(this.attach_CTDichVus), new Action<CTDichVu>(this.detach_CTDichVus));
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			this._LoaiXe1 = default(EntityRef<LoaiXe>);
			this._Chuyen = default(EntityRef<Chuyen>);
			this._HangXe = default(EntityRef<HangXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoXe", DbType="VarChar(10)")]
		public string SoXe
		{
			get
			{
				return this._SoXe;
			}
			set
			{
				if ((this._SoXe != value))
				{
					this.OnSoXeChanging(value);
					this.SendPropertyChanging();
					this._SoXe = value;
					this.SendPropertyChanged("SoXe");
					this.OnSoXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuyen", DbType="Char(5)")]
		public string MaChuyen
		{
			get
			{
				return this._MaChuyen;
			}
			set
			{
				if ((this._MaChuyen != value))
				{
					if (this._Chuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChuyen = value;
					this.SendPropertyChanged("MaChuyen");
					this.OnMaChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiXe", DbType="NVarChar(50)")]
		public string TenTaiXe
		{
			get
			{
				return this._TenTaiXe;
			}
			set
			{
				if ((this._TenTaiXe != value))
				{
					this.OnTenTaiXeChanging(value);
					this.SendPropertyChanging();
					this._TenTaiXe = value;
					this.SendPropertyChanged("TenTaiXe");
					this.OnTenTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiXe", DbType="Char(5)")]
		public string LoaiXe
		{
			get
			{
				return this._LoaiXe;
			}
			set
			{
				if ((this._LoaiXe != value))
				{
					if (this._LoaiXe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._LoaiXe = value;
					this.SendPropertyChanged("LoaiXe");
					this.OnLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHangXe", DbType="Char(5)")]
		public string MaHangXe
		{
			get
			{
				return this._MaHangXe;
			}
			set
			{
				if ((this._MaHangXe != value))
				{
					if (this._HangXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangXeChanging(value);
					this.SendPropertyChanging();
					this._MaHangXe = value;
					this.SendPropertyChanged("MaHangXe");
					this.OnMaHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGXuatPhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGXuatPhat
		{
			get
			{
				return this._TGXuatPhat;
			}
			set
			{
				if ((this._TGXuatPhat != value))
				{
					this.OnTGXuatPhatChanging(value);
					this.SendPropertyChanging();
					this._TGXuatPhat = value;
					this.SendPropertyChanged("TGXuatPhat");
					this.OnTGXuatPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGHuyVe", DbType="Time")]
		public System.Nullable<System.TimeSpan> TGHuyVe
		{
			get
			{
				return this._TGHuyVe;
			}
			set
			{
				if ((this._TGHuyVe != value))
				{
					this.OnTGHuyVeChanging(value);
					this.SendPropertyChanging();
					this._TGHuyVe = value;
					this.SendPropertyChanged("TGHuyVe");
					this.OnTGHuyVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_CTDichVu", Storage="_CTDichVus", ThisKey="MaXe", OtherKey="Xe")]
		public EntitySet<CTDichVu> CTDichVus
		{
			get
			{
				return this._CTDichVus;
			}
			set
			{
				this._CTDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_Ghe", Storage="_Ghes", ThisKey="MaXe", OtherKey="Xe")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiXe_Xe", Storage="_LoaiXe1", ThisKey="LoaiXe", OtherKey="MaLoaiXe", IsForeignKey=true)]
		public LoaiXe LoaiXe1
		{
			get
			{
				return this._LoaiXe1.Entity;
			}
			set
			{
				LoaiXe previousValue = this._LoaiXe1.Entity;
				if (((previousValue != value) 
							|| (this._LoaiXe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiXe1.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._LoaiXe1.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._LoaiXe = value.MaLoaiXe;
					}
					else
					{
						this._LoaiXe = default(string);
					}
					this.SendPropertyChanged("LoaiXe1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuyen_Xe", Storage="_Chuyen", ThisKey="MaChuyen", OtherKey="MaChuyen", IsForeignKey=true)]
		public Chuyen Chuyen
		{
			get
			{
				return this._Chuyen.Entity;
			}
			set
			{
				Chuyen previousValue = this._Chuyen.Entity;
				if (((previousValue != value) 
							|| (this._Chuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chuyen.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._Chuyen.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._MaChuyen = value.MaChuyen;
					}
					else
					{
						this._MaChuyen = default(string);
					}
					this.SendPropertyChanged("Chuyen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_Xe", Storage="_HangXe", ThisKey="MaHangXe", OtherKey="MaHangXe", IsForeignKey=true)]
		public HangXe HangXe
		{
			get
			{
				return this._HangXe.Entity;
			}
			set
			{
				HangXe previousValue = this._HangXe.Entity;
				if (((previousValue != value) 
							|| (this._HangXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangXe.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._HangXe.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._MaHangXe = value.MaHangXe;
					}
					else
					{
						this._MaHangXe = default(string);
					}
					this.SendPropertyChanged("HangXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDichVus(CTDichVu entity)
		{
			this.SendPropertyChanging();
			entity.Xe1 = this;
		}
		
		private void detach_CTDichVus(CTDichVu entity)
		{
			this.SendPropertyChanging();
			entity.Xe1 = null;
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Xe1 = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Xe1 = null;
		}
	}
}
#pragma warning restore 1591
